{
  "DNN": {
    "model": models.DNN([input_size, 2048, 2048, 10], (init = "uniform"), (std = STD), (device = DEVICE)),
    "optimizer": torch.optim.Adam,
    "criterion": torch.nn.CrossEntropyLoss(),
    "optimizer_parameters": {
      "lr": 1e-4
    },
    "parameters": {
      "n_epochs": 100
    }
  },
  "BNN Meta": {
    "model": models.BNN([input_size, 2048, 2048, 10], (init = "uniform"), (std = STD), (device = DEVICE)),
    "optimizer": MetaplasticAdam,
    "criterion": torch.nn.CrossEntropyLoss(),
    "optimizer_parameters": {
      "lr": 1e-4,
      "metaplasticity": 1.5
    },
    "parameters": {
      "n_epochs": 100
    }
  },
  "BNN BiNN": {
    "model": models.BNN([input_size, 2048, 2048, 10], (init = "uniform"), (std = STD), (device = DEVICE)),
    "optimizer": BayesBiNN,
    "criterion": torch.nn.CrossEntropyLoss(),
    "optimizer_parameters": {
      "lr": 1e-4,
      "beta": 0.15,
      "num_mcmc_samples": 1,
      "temperature": 1e-10
    },
    "parameters": { "n_epochs": 100 }
  },
  "BNN Copy BiNN": {
    "model": models.BNN([input_size, 2048, 2048, 10], (init = "uniform"), (std = STD), (device = DEVICE)),
    "optimizer": BayesBiNN,
    "criterion": torch.nn.CrossEntropyLoss(),
    "optimizer_parameters": {
      "lr": 1e-4,
      "train_set_size": len(mnist_train.dataset),
      "momentum": 0.15,
      "N": 1,
      "temperature": 1e-10,
      "beta": 0.0
    },
    "parameters": { "n_epochs": 100 }
  }
}
